# This is a basic workflow to help you get started with Actions
name: CI


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js v16
      uses: actions/setup-node@v3
      with:
        node-version: "16"

    - name: Set up Postgres
      uses: CasperWA/postgresql-action@v1
      with:
        postgresql version: '14'
        postgresql db: 'db'
        postgresql user: admin
        postgresql password: admin
        
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      shell: bash
  
    - name: Cache yarn
      uses: actions/cache@v3
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          yarn-
      
    - name: Install dependencies
      working-directory: ./WordEnigma
      run: yarn install --immutable
      shell: bash
      
    - name: Run Build
      working-directory: WordEnigma
      run: yarn rw build
      shell: bash
      
    - name: Run Lint
      working-directory: WordEnigma
      run: yarn rw lint
      shell: bash
      
    - name: Run Diagnostics
      working-directory: WordEnigma
      run: yarn rw check
      shell: bash
      
    - name: Run Tests
      working-directory: WordEnigma
      run: yarn rw test
      env:
        TEST_DATABASE_URL: postgresql://admin:admin@localhost:5432/db
      shell: bash
